@inherits LayoutComponentBase
@using Blazored.Toast.Configuration
@using Cizaro_Blazor_Server.Services;
@inject ILocalStorageService _localstorage;
@inject NavigationManager NavigationManager 
@inject AppState AppState
<PageTitle>Cizaro-Blazor-Server</PageTitle>


<BlazoredToasts Position="ToastPosition.TopCenter"
                Timeout="10"
                IconType="IconType.FontAwesome"
                SuccessClass="success-toast-override"
                SuccessIcon="fa fa-thumbs-up"
                ErrorIcon="fa fa-bug" />


<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4" style="padding: 43px;">
            <button class="costom_a_tag @(dashboard ? "active_tab" : "")" @onclick="@(() => HandleTab("dashboard"))">Dashboards</button>&nbsp;&nbsp;
            <button class="costom_a_tag  @(reports ? "active_tab" : "")" @onclick="@(() => HandleTab("reports"))">Reports</button>&nbsp;&nbsp;
            <button class="costom_a_tag" @onclick="HandleLogOut">Log Out</button>&nbsp;&nbsp;
            <button class="costom_a_tag @(administrator ? "active_tab" : "")" @onclick="@(() => HandleTab("administrator"))">Administrator</button>
        </div>

        <article class="content px-4">
                @Body
        </article>
    </main>
</div>

@code{
    bool dashboard = false;
    bool reports = false;
    bool administrator = false;
    protected override void OnInitialized()
    {
       
    }
    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
           
        }
    }
    private void HandleLogOut()
    {
        _localstorage.ClearAsync();
        NavigationManager.NavigateTo("/login");
    }
    private void HandleTab(string tabName)
    {
        var color = tabName;
        AppState.SetTopBarSelectedTab(color);
        switch (tabName)
        {
            case "dashboard":
                dashboard = true;
                reports = false;
                administrator = false;
                break;
            case "reports":
                dashboard = false;
                reports = true;
                administrator = false;
                break;
            case "administrator":
                dashboard = false;
                reports = false;
                administrator = true;
                break;
            default:
                break;
        }
    }
}
